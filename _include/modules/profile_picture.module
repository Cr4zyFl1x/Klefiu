<?php
$statusMsgPicture = false;
$form = [];

if ($_GET['handler'] == "profile-picture") {

    // VAR
    $profilePictureDir = "_storage/private/profile-pictures/";
    $pictureFilename = pathinfo($_FILES['profile_picture']['name'], PATHINFO_FILENAME);
    $pictureExtension = strtolower(pathinfo($_FILES['profile_picture']['name'], PATHINFO_EXTENSION));

    // Check extension
    $allowedExt = array('jpg', 'png', 'jpeg', 'gif');
    if (!in_array($pictureExtension, $allowedExt)) {
        $error = true;
        $statusMsgPicture = true;
        $form['statusPicture'] = "<div class=\"alert alert-danger\" role=\"alert\">".$lng['error']['invalidextension']."</div>";
    }

    // Check filesize
    if (!$error && $_FILES['profile_picture']['size'] > (8000*1024)) {
        $error = true;
        $statusMsgPicture = true;
        $form['statusPicture'] = "<div class=\"alert alert-danger\" role=\"alert\">".$lng['error']['filesize']."</div>";
    }

    // Check image
    if (!$error && function_exists('exif_imagetype')) {
        $allowedTypes =  [IMAGETYPE_JPEG, IMAGETYPE_GIF, IMAGETYPE_PNG];
        $type = exif_imagetype($_FILES['profile_picture']['tmp_name']);
        if (!in_array($type, $allowedTypes)) {
            $error = true;
            $statusMsgPicture = true;
            $form['statusPicture'] = "<div class=\"alert alert-danger\" role=\"alert\">".$lng['error']['nonimage']."</div>";
        }
    }

    // Check Image dimensions
    if (getimagesize($_FILES['profile_picture']['tmp_name'])[0] !== getimagesize($_FILES['profile_picture']['tmp_name'])[1]) {
        $error = true;
        $statusMsgPicture = true;
        $form['statusPicture'] = "<div class=\"alert alert-danger\" role=\"alert\">".$lng['error']['imagedimensions']."</div>";
    }


    // Move File
    if (!$error) {
        // Delete previous picture
        deleteProfilePicture();

        $uploadPath = $profilePictureDir . $app->auth()->getUser()->getUserID() . '_' .$app->utils()->getRandomString();
        while (file_exists($uploadPath)) {
            $uploadPath = $profilePictureDir . $app->auth()->getUser()->getUserID() . '_' .$app->utils()->getRandomString();
        }

        move_uploaded_file($_FILES['profile_picture']['tmp_name'], $uploadPath);
        $app->auth()->getUser()->setProfilePictureData($uploadPath, $pictureExtension);
    }



}

if ($_GET['handler'] == "profile-picture-delete") {
    deleteProfilePicture();
}



